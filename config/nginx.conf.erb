daemon off;

worker_processes <%= ENV["NGINX_WORKERS"] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  multi_accept on;
  worker_connections 1024;
}

http {
  <% if ENV["FORCE_HTTPS"] %>
    gzip off;
  <% else %>
    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_comp_level 2;
    gzip_min_length 512;
  <% end %>

  server_tokens off;

  tcp_nopush on;
  tcp_nodelay on;

  log_format l2met "measure#nginx.service=$request_time request_id=$http_x_request_id";
  access_log logs/nginx/access.log l2met;
  error_log logs/nginx/error.log;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  server {
    listen <%= ENV["PORT"] || 80 %>;
    server_name _;
    keepalive_timeout 5;
    root dist;
    index index.html;

    <% if ENV["FORCE_HTTPS"] %>
      if ( $http_x_forwarded_proto != 'https' ) {
        return 301 https://$host$request_uri;
      }
    <% end %>

    <% if ENV["BASIC_AUTH_USER"] && ENV["BASIC_AUTH_PASSWORD"] %>
      auth_basic "Restricted";
      auth_basic_user_file <%= "#{ENV["HOME"]}/config/htpasswd" %>;
    <% end %>

    <% if ENV["API_URL"] %>
      location <%= ENV["API_PREFIX_PATH"] || "/api/" %> {
        proxy_pass <%= ENV["API_URL"] %>;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_redirect off;
        <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-API-Proxy on;<% end %>
      }
    <% end %>

    <% if ENV["API_URL"] && ENV["SITEMAP_URL"] %>
      location <%= ENV["SITEMAP_URL"] %> {
        proxy_pass <%= ENV["API_URL"][0..-2] %>;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_redirect off;
        <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-API-Proxy-Sitemap on;<% end %>
      }
    <% end %>

    <% if ENV["TOKEN_URL"] %>
      location <%= ENV["TOKEN_PATH"] || "/token" %> {
        proxy_pass <%= ENV["TOKEN_URL"] %>;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_redirect off;
        <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-Token-Proxy on;<% end %>
      }
    <% end %>

    <% if ENV["EXTERNAL_TOKEN_URL"] %>
      location <%= ENV["EXTERNAL_TOKEN_PATH"] || "/external_token" %> {
        proxy_pass <%= ENV["EXTERNAL_TOKEN_URL"] %>;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_redirect off;
        <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-External-Token-Proxy on;<% end %>
      }
    <% end %>

    location ~* \index.html$ {
      expires off;
      <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-Html on;<% end %>
    }

    location ~* \robots.txt {
      expires off;
      <% if ENV["ENV"] == "test" %>alias /robots-dev.txt;<% end %>
    }

    location ~* \.(ogg|ogv|svgz|mp4|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|html|txt|htm)$ {
      expires max;
      log_not_found off;
      access_log off;
      add_header Cache-Control public;
      fastcgi_hide_header Set-Cookie;
      <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-Speed on;<% end %>
    }

    location ~* \.(eot|oft|svg|ttf|woff)$ {
      add_header Access-Control-Allow-Origin *;
      expires max;
      log_not_found off;
      access_log off;
      add_header Cache-Control public;
      fastcgi_hide_header Set-Cookie;
      <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-Font on;<% end %>
    }

    location ~ /\. {
      deny all;
      <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-Denied on;<% end %>
    }

    location / {
      try_files $uri @prerender;
    }

    location @prerender {
      proxy_set_header X-Prerender-Token <%= ENV["PRERENDER_TOKEN"] %>;

      set $prerender 0;
      if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
          set $prerender 1;
      }
      if ($args ~ "_escaped_fragment_") {
          set $prerender 1;
      }
      if ($http_user_agent ~ "Prerender") {
          set $prerender 0;
      }
      if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
          set $prerender 0;
      }

      #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
      resolver 8.8.8.8;

      if ($prerender = 1) {

          #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
          set $prerender "service.prerender.io";
          rewrite .* /$http_x_forwarded_proto://$host$request_uri? break;
          proxy_pass http://$prerender;
      }
      if ($prerender = 0) {
          add_header "Cache-Control" "no-cache, no-store, must-revalidate";
          add_header "Pragma" "no-cache";
          add_header "Expires" "0";
          <% if ENV["NGINX_DEBUG"] %>add_header X-SPA-Base-Location on;<% end %>
          rewrite .* /index.html break;
      }
    }

  }
}
